chamba mochao absoluto ( mochao num ) {
    dizque ( num < 0 ) tonces {
        enfierrar num * -1 ;
    }
    pasino {
        enfierrar num ;
    }
}

chamba mochao min ( mochao a , mochao b ) {
    dizque ( a < b ) tonces {
        enfierrar a ;
    }
    pasino {
        enfierrar b ;
    }
}

chamba completiao piso ( mochao num ) {
    enfierrar num ;
}

chamba mochao max ( mochao a , mochao b ) {
    dizque ( a > b ) tonces {
        enfierrar a ;
    }
    pasino {
        enfierrar b ;
    }
}

chamba completiao modulo ( completiao a , completiao b ) {
    b = fonear absoluto ( b ) ;
    a = fonear absoluto ( a ) ;

    enfierrar a - ( fonear piso ( a / b ) * b ) ;
}

chamba completiao com_divisor ( completiao num , completiao den ) {
    ondes ( den != 0 ) {
        completiao anterior = den ;
        den = fonear modulo ( num , den ) ;
        num = anterior ;
    }

    enfierrar num ;
}

chamba mochao exponente_n ( mochao num , completiao exp ) {
    mochao res = num ;
    siono negativo = nosierto ;
    
    dizque ( exp == 0 ) tonces {
        enfierrar 1 ;
    }
    perosi ( exp < 0 ) tonces {
        negativo = sicierto ;
        exp = 0 - exp ;
    }
    patodos ( i , i < exp - 1 , ++ ) {
        res = res * num ;
    }
    
    dizque ( negativo ) tonces {
        enfierrar 1 / res ;
    }
    pasino {
        enfierrar res ;
    }
}

chamba mochao raiz_n ( mochao num , mochao raiz ) {
    dizque ( raiz == 1 ) tonces {
        enfierrar num ;
    }

    mochao bajo = 1 ;
    mochao alto = num ;
    mochao medio = 0 ;

    ondes ( bajo <= alto ) {
        medio = ( bajo + alto ) / 2 ;
        mochao x = medio ;

        completiao contar = 1 ;
        hacer {
            x = x * medio ;
            contar = contar + 1 ;
        }
        ondes ( ( x <= num ) aparte ( contar < raiz ) )

        dizque ( ( x <= num + 0.001 ) aparte ( x >= num - 0.001 ) ) tonces {
            enfierrar medio ;
        }
        perosi ( x > num ) tonces {
            alto = medio ;
        }
        pasino {
            bajo = medio ;
        }
    }

    enfierrar -1 ;
}

chamba mochao tri_mf ( mochao val , mochao inicio , mochao tope , mochao final ) {
    mochao lado_a = ( val - inicio ) / ( tope - inicio ) ;
    mochao lado_b = ( final - val ) / ( final - tope ) ;

    enfierrar fonear max ( fonear min ( lado_a , lado_b ) , 0 ) ;
}

chamba mochao gauss_mf ( mochao val , mochao desv , mochao media ) {
    mochao e = 2.71828 ;

    completiao num = fonear exponente_n ( val - media , 2 ) ;
    completiao den = 2 * fonear exponente_n ( desv , 2 ) ;

    completiao div = fonear com_divisor ( num , den ) ;

    dizque ( fonear modulo ( num , den ) == 0 ) tonces {
        enfierrar 1 / fonear exponente_n ( e , num / den ) ;
    }
    pasino {
        completiao exp = num / div ;
        completiao raiz = den / div ;

        completiao factor = fonear piso ( exp / raiz ) ;

        mochao fraccionario = fonear exponente_n ( fonear raiz_n ( e , raiz ) , exp - ( raiz * factor ) ) ;

        enfierrar 1 / ( fonear exponente_n ( e , factor ) * fraccionario ) ;
    }
}

completiao servicio = 80 ;
completiao comida = 80 ;

completiao baja = 0 ;
completiao media = 10 ;
completiao alta = 30 ;

mochao s_pobre = fonear tri_mf ( servicio , -1 , 25 , 50 ) ;
mochao s_aceptable = fonear tri_mf ( servicio , 25 , 50 , 75 ) ;
mochao s_bueno = fonear tri_mf ( servicio , 50 , 75 , 101 ) ;

mochao c_mala = fonear gauss_mf ( comida , 15 , 25 ) ;
mochao c_buena = fonear gauss_mf ( comida , 15 , 50 ) ;
mochao c_excelente = fonear gauss_mf ( comida , 30 , 100 ) ;

mochao r1 = fonear min ( s_pobre , c_mala ) ;
mochao r2 = fonear min ( s_aceptable , c_mala ) ;
mochao r3 = fonear min ( s_bueno , c_mala ) ;
mochao r4 = fonear min ( s_pobre , c_buena ) ;
mochao r5 = fonear min ( s_pobre , c_mala ) ;
mochao r6 = fonear min ( s_bueno , c_excelente ) ;
mochao r7 = fonear min ( s_pobre , c_excelente ) ;

mochao baja_ag = fonear max ( fonear max ( r1 , r2 ) , r4 ) ;
mochao media_ag = fonear max ( fonear max ( r3 , r5 ) , r7 ) ;
mochao alta_ag = r6 ;

mochao num = ( baja * baja_ag ) + ( media * media_ag ) + ( alta * alta_ag ) ;
mochao den = baja_ag + media_ag + alta_ag ;

disir ( num / den ) ;